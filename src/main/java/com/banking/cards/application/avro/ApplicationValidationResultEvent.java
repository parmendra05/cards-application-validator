/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.banking.cards.application.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ApplicationValidationResultEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 208867279033789854L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ApplicationValidationResultEvent\",\"namespace\":\"com.banking.cards.application.avro\",\"fields\":[{\"name\":\"correlationID\",\"type\":\"string\"},{\"name\":\"applicationStatus\",\"type\":\"string\"},{\"name\":\"validationMessages\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}],\"version\":1}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ApplicationValidationResultEvent> ENCODER =
      new BinaryMessageEncoder<ApplicationValidationResultEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ApplicationValidationResultEvent> DECODER =
      new BinaryMessageDecoder<ApplicationValidationResultEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ApplicationValidationResultEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ApplicationValidationResultEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ApplicationValidationResultEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ApplicationValidationResultEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ApplicationValidationResultEvent from a ByteBuffer. */
  public static ApplicationValidationResultEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence correlationID;
  @Deprecated public java.lang.CharSequence applicationStatus;
  @Deprecated public java.util.List<java.lang.CharSequence> validationMessages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ApplicationValidationResultEvent() {}

  /**
   * All-args constructor.
   * @param correlationID The new value for correlationID
   * @param applicationStatus The new value for applicationStatus
   * @param validationMessages The new value for validationMessages
   */
  public ApplicationValidationResultEvent(java.lang.CharSequence correlationID, java.lang.CharSequence applicationStatus, java.util.List<java.lang.CharSequence> validationMessages) {
    this.correlationID = correlationID;
    this.applicationStatus = applicationStatus;
    this.validationMessages = validationMessages;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlationID;
    case 1: return applicationStatus;
    case 2: return validationMessages;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlationID = (java.lang.CharSequence)value$; break;
    case 1: applicationStatus = (java.lang.CharSequence)value$; break;
    case 2: validationMessages = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'correlationID' field.
   * @return The value of the 'correlationID' field.
   */
  public java.lang.CharSequence getCorrelationID() {
    return correlationID;
  }

  /**
   * Sets the value of the 'correlationID' field.
   * @param value the value to set.
   */
  public void setCorrelationID(java.lang.CharSequence value) {
    this.correlationID = value;
  }

  /**
   * Gets the value of the 'applicationStatus' field.
   * @return The value of the 'applicationStatus' field.
   */
  public java.lang.CharSequence getApplicationStatus() {
    return applicationStatus;
  }

  /**
   * Sets the value of the 'applicationStatus' field.
   * @param value the value to set.
   */
  public void setApplicationStatus(java.lang.CharSequence value) {
    this.applicationStatus = value;
  }

  /**
   * Gets the value of the 'validationMessages' field.
   * @return The value of the 'validationMessages' field.
   */
  public java.util.List<java.lang.CharSequence> getValidationMessages() {
    return validationMessages;
  }

  /**
   * Sets the value of the 'validationMessages' field.
   * @param value the value to set.
   */
  public void setValidationMessages(java.util.List<java.lang.CharSequence> value) {
    this.validationMessages = value;
  }

  /**
   * Creates a new ApplicationValidationResultEvent RecordBuilder.
   * @return A new ApplicationValidationResultEvent RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder newBuilder() {
    return new com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder();
  }

  /**
   * Creates a new ApplicationValidationResultEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ApplicationValidationResultEvent RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder newBuilder(com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder other) {
    return new com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder(other);
  }

  /**
   * Creates a new ApplicationValidationResultEvent RecordBuilder by copying an existing ApplicationValidationResultEvent instance.
   * @param other The existing instance to copy.
   * @return A new ApplicationValidationResultEvent RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder newBuilder(com.banking.cards.application.avro.ApplicationValidationResultEvent other) {
    return new com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder(other);
  }

  /**
   * RecordBuilder for ApplicationValidationResultEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ApplicationValidationResultEvent>
    implements org.apache.avro.data.RecordBuilder<ApplicationValidationResultEvent> {

    private java.lang.CharSequence correlationID;
    private java.lang.CharSequence applicationStatus;
    private java.util.List<java.lang.CharSequence> validationMessages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlationID)) {
        this.correlationID = data().deepCopy(fields()[0].schema(), other.correlationID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applicationStatus)) {
        this.applicationStatus = data().deepCopy(fields()[1].schema(), other.applicationStatus);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.validationMessages)) {
        this.validationMessages = data().deepCopy(fields()[2].schema(), other.validationMessages);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ApplicationValidationResultEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.banking.cards.application.avro.ApplicationValidationResultEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlationID)) {
        this.correlationID = data().deepCopy(fields()[0].schema(), other.correlationID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applicationStatus)) {
        this.applicationStatus = data().deepCopy(fields()[1].schema(), other.applicationStatus);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.validationMessages)) {
        this.validationMessages = data().deepCopy(fields()[2].schema(), other.validationMessages);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'correlationID' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationID() {
      return correlationID;
    }

    /**
      * Sets the value of the 'correlationID' field.
      * @param value The value of 'correlationID'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder setCorrelationID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.correlationID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationID' field has been set.
      * @return True if the 'correlationID' field has been set, false otherwise.
      */
    public boolean hasCorrelationID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlationID' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder clearCorrelationID() {
      correlationID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getApplicationStatus() {
      return applicationStatus;
    }

    /**
      * Sets the value of the 'applicationStatus' field.
      * @param value The value of 'applicationStatus'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder setApplicationStatus(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.applicationStatus = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationStatus' field has been set.
      * @return True if the 'applicationStatus' field has been set, false otherwise.
      */
    public boolean hasApplicationStatus() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'applicationStatus' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder clearApplicationStatus() {
      applicationStatus = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'validationMessages' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getValidationMessages() {
      return validationMessages;
    }

    /**
      * Sets the value of the 'validationMessages' field.
      * @param value The value of 'validationMessages'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder setValidationMessages(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.validationMessages = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'validationMessages' field has been set.
      * @return True if the 'validationMessages' field has been set, false otherwise.
      */
    public boolean hasValidationMessages() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'validationMessages' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationValidationResultEvent.Builder clearValidationMessages() {
      validationMessages = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ApplicationValidationResultEvent build() {
      try {
        ApplicationValidationResultEvent record = new ApplicationValidationResultEvent();
        record.correlationID = fieldSetFlags()[0] ? this.correlationID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.applicationStatus = fieldSetFlags()[1] ? this.applicationStatus : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.validationMessages = fieldSetFlags()[2] ? this.validationMessages : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ApplicationValidationResultEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ApplicationValidationResultEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ApplicationValidationResultEvent>
    READER$ = (org.apache.avro.io.DatumReader<ApplicationValidationResultEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
