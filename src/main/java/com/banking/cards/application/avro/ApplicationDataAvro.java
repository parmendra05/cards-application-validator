/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.banking.cards.application.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ApplicationDataAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9129112316384855546L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ApplicationDataAvro\",\"namespace\":\"com.banking.cards.application.avro\",\"fields\":[{\"name\":\"correlationID\",\"type\":\"string\"},{\"name\":\"dateOfBirth\",\"type\":\"string\"},{\"name\":\"socialSecurityNumber\",\"type\":\"string\"},{\"name\":\"grossAnnualIncome\",\"type\":\"double\"},{\"name\":\"cardType\",\"type\":\"string\"}],\"version\":1}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ApplicationDataAvro> ENCODER =
      new BinaryMessageEncoder<ApplicationDataAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ApplicationDataAvro> DECODER =
      new BinaryMessageDecoder<ApplicationDataAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ApplicationDataAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ApplicationDataAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ApplicationDataAvro>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ApplicationDataAvro to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ApplicationDataAvro from a ByteBuffer. */
  public static ApplicationDataAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence correlationID;
  @Deprecated public java.lang.CharSequence dateOfBirth;
  @Deprecated public java.lang.CharSequence socialSecurityNumber;
  @Deprecated public double grossAnnualIncome;
  @Deprecated public java.lang.CharSequence cardType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ApplicationDataAvro() {}

  /**
   * All-args constructor.
   * @param correlationID The new value for correlationID
   * @param dateOfBirth The new value for dateOfBirth
   * @param socialSecurityNumber The new value for socialSecurityNumber
   * @param grossAnnualIncome The new value for grossAnnualIncome
   * @param cardType The new value for cardType
   */
  public ApplicationDataAvro(java.lang.CharSequence correlationID, java.lang.CharSequence dateOfBirth, java.lang.CharSequence socialSecurityNumber, java.lang.Double grossAnnualIncome, java.lang.CharSequence cardType) {
    this.correlationID = correlationID;
    this.dateOfBirth = dateOfBirth;
    this.socialSecurityNumber = socialSecurityNumber;
    this.grossAnnualIncome = grossAnnualIncome;
    this.cardType = cardType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlationID;
    case 1: return dateOfBirth;
    case 2: return socialSecurityNumber;
    case 3: return grossAnnualIncome;
    case 4: return cardType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlationID = (java.lang.CharSequence)value$; break;
    case 1: dateOfBirth = (java.lang.CharSequence)value$; break;
    case 2: socialSecurityNumber = (java.lang.CharSequence)value$; break;
    case 3: grossAnnualIncome = (java.lang.Double)value$; break;
    case 4: cardType = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'correlationID' field.
   * @return The value of the 'correlationID' field.
   */
  public java.lang.CharSequence getCorrelationID() {
    return correlationID;
  }

  /**
   * Sets the value of the 'correlationID' field.
   * @param value the value to set.
   */
  public void setCorrelationID(java.lang.CharSequence value) {
    this.correlationID = value;
  }

  /**
   * Gets the value of the 'dateOfBirth' field.
   * @return The value of the 'dateOfBirth' field.
   */
  public java.lang.CharSequence getDateOfBirth() {
    return dateOfBirth;
  }

  /**
   * Sets the value of the 'dateOfBirth' field.
   * @param value the value to set.
   */
  public void setDateOfBirth(java.lang.CharSequence value) {
    this.dateOfBirth = value;
  }

  /**
   * Gets the value of the 'socialSecurityNumber' field.
   * @return The value of the 'socialSecurityNumber' field.
   */
  public java.lang.CharSequence getSocialSecurityNumber() {
    return socialSecurityNumber;
  }

  /**
   * Sets the value of the 'socialSecurityNumber' field.
   * @param value the value to set.
   */
  public void setSocialSecurityNumber(java.lang.CharSequence value) {
    this.socialSecurityNumber = value;
  }

  /**
   * Gets the value of the 'grossAnnualIncome' field.
   * @return The value of the 'grossAnnualIncome' field.
   */
  public java.lang.Double getGrossAnnualIncome() {
    return grossAnnualIncome;
  }

  /**
   * Sets the value of the 'grossAnnualIncome' field.
   * @param value the value to set.
   */
  public void setGrossAnnualIncome(java.lang.Double value) {
    this.grossAnnualIncome = value;
  }

  /**
   * Gets the value of the 'cardType' field.
   * @return The value of the 'cardType' field.
   */
  public java.lang.CharSequence getCardType() {
    return cardType;
  }

  /**
   * Sets the value of the 'cardType' field.
   * @param value the value to set.
   */
  public void setCardType(java.lang.CharSequence value) {
    this.cardType = value;
  }

  /**
   * Creates a new ApplicationDataAvro RecordBuilder.
   * @return A new ApplicationDataAvro RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationDataAvro.Builder newBuilder() {
    return new com.banking.cards.application.avro.ApplicationDataAvro.Builder();
  }

  /**
   * Creates a new ApplicationDataAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ApplicationDataAvro RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationDataAvro.Builder newBuilder(com.banking.cards.application.avro.ApplicationDataAvro.Builder other) {
    return new com.banking.cards.application.avro.ApplicationDataAvro.Builder(other);
  }

  /**
   * Creates a new ApplicationDataAvro RecordBuilder by copying an existing ApplicationDataAvro instance.
   * @param other The existing instance to copy.
   * @return A new ApplicationDataAvro RecordBuilder
   */
  public static com.banking.cards.application.avro.ApplicationDataAvro.Builder newBuilder(com.banking.cards.application.avro.ApplicationDataAvro other) {
    return new com.banking.cards.application.avro.ApplicationDataAvro.Builder(other);
  }

  /**
   * RecordBuilder for ApplicationDataAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ApplicationDataAvro>
    implements org.apache.avro.data.RecordBuilder<ApplicationDataAvro> {

    private java.lang.CharSequence correlationID;
    private java.lang.CharSequence dateOfBirth;
    private java.lang.CharSequence socialSecurityNumber;
    private double grossAnnualIncome;
    private java.lang.CharSequence cardType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.banking.cards.application.avro.ApplicationDataAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlationID)) {
        this.correlationID = data().deepCopy(fields()[0].schema(), other.correlationID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[2].schema(), other.socialSecurityNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.grossAnnualIncome)) {
        this.grossAnnualIncome = data().deepCopy(fields()[3].schema(), other.grossAnnualIncome);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cardType)) {
        this.cardType = data().deepCopy(fields()[4].schema(), other.cardType);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ApplicationDataAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.banking.cards.application.avro.ApplicationDataAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlationID)) {
        this.correlationID = data().deepCopy(fields()[0].schema(), other.correlationID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.socialSecurityNumber)) {
        this.socialSecurityNumber = data().deepCopy(fields()[2].schema(), other.socialSecurityNumber);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.grossAnnualIncome)) {
        this.grossAnnualIncome = data().deepCopy(fields()[3].schema(), other.grossAnnualIncome);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.cardType)) {
        this.cardType = data().deepCopy(fields()[4].schema(), other.cardType);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'correlationID' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationID() {
      return correlationID;
    }

    /**
      * Sets the value of the 'correlationID' field.
      * @param value The value of 'correlationID'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder setCorrelationID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.correlationID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlationID' field has been set.
      * @return True if the 'correlationID' field has been set, false otherwise.
      */
    public boolean hasCorrelationID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlationID' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder clearCorrelationID() {
      correlationID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateOfBirth' field.
      * @return The value.
      */
    public java.lang.CharSequence getDateOfBirth() {
      return dateOfBirth;
    }

    /**
      * Sets the value of the 'dateOfBirth' field.
      * @param value The value of 'dateOfBirth'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder setDateOfBirth(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.dateOfBirth = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dateOfBirth' field has been set.
      * @return True if the 'dateOfBirth' field has been set, false otherwise.
      */
    public boolean hasDateOfBirth() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dateOfBirth' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder clearDateOfBirth() {
      dateOfBirth = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'socialSecurityNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getSocialSecurityNumber() {
      return socialSecurityNumber;
    }

    /**
      * Sets the value of the 'socialSecurityNumber' field.
      * @param value The value of 'socialSecurityNumber'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder setSocialSecurityNumber(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.socialSecurityNumber = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'socialSecurityNumber' field has been set.
      * @return True if the 'socialSecurityNumber' field has been set, false otherwise.
      */
    public boolean hasSocialSecurityNumber() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'socialSecurityNumber' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder clearSocialSecurityNumber() {
      socialSecurityNumber = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'grossAnnualIncome' field.
      * @return The value.
      */
    public java.lang.Double getGrossAnnualIncome() {
      return grossAnnualIncome;
    }

    /**
      * Sets the value of the 'grossAnnualIncome' field.
      * @param value The value of 'grossAnnualIncome'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder setGrossAnnualIncome(double value) {
      validate(fields()[3], value);
      this.grossAnnualIncome = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'grossAnnualIncome' field has been set.
      * @return True if the 'grossAnnualIncome' field has been set, false otherwise.
      */
    public boolean hasGrossAnnualIncome() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'grossAnnualIncome' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder clearGrossAnnualIncome() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'cardType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCardType() {
      return cardType;
    }

    /**
      * Sets the value of the 'cardType' field.
      * @param value The value of 'cardType'.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder setCardType(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.cardType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'cardType' field has been set.
      * @return True if the 'cardType' field has been set, false otherwise.
      */
    public boolean hasCardType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'cardType' field.
      * @return This builder.
      */
    public com.banking.cards.application.avro.ApplicationDataAvro.Builder clearCardType() {
      cardType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ApplicationDataAvro build() {
      try {
        ApplicationDataAvro record = new ApplicationDataAvro();
        record.correlationID = fieldSetFlags()[0] ? this.correlationID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.dateOfBirth = fieldSetFlags()[1] ? this.dateOfBirth : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.socialSecurityNumber = fieldSetFlags()[2] ? this.socialSecurityNumber : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.grossAnnualIncome = fieldSetFlags()[3] ? this.grossAnnualIncome : (java.lang.Double) defaultValue(fields()[3]);
        record.cardType = fieldSetFlags()[4] ? this.cardType : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ApplicationDataAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ApplicationDataAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ApplicationDataAvro>
    READER$ = (org.apache.avro.io.DatumReader<ApplicationDataAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
